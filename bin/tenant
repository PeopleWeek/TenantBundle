#!/bin/bash
trap_with_arg() {
    func="$1" ; shift
    for sig ; do
        trap "$func $sig" "$sig"
    done
}

init_killtree() {
    local pid=$1 child

    for child in $(pgrep -P $pid); do
        init_killtree $child
    done
    [ $pid -ne $$ ] && kill -$sig $pid 2>/dev/null
}

trap_with_arg "init_killtree $$" INT TERM

usage()
{
cat << EOF
usage: $0 options

Run a console command for multiple tenants

OPTIONS:
   -h      Show this message
   -t      Manually specify the tenants (comma separated)
   -P      Number of parallel processes
   -v      Verbose
   -e      Environment to run this as (if no tenants, the command
           will be ran against this environment). The command will
           attempt to recognise -e or --env from the Symfony command.
EOF
}

TENANTS=
PROCESSES=1
VERBOSE=
ENVIRONMENT=

while getopts "ht:P:ve:" OPTION
do
     case $OPTION in
         h)
             usage
             exit 1
             ;;
         t)
             TENANTS=$(echo "$OPTARG" | tr " ;," "\n")
             ;;
         P)
             PROCESSES=$OPTARG
             ;;
         v)
             VERBOSE="-t"
             ;;
         e)
             ENVIRONMENT="-e $OPTARG"
             ;;
         ?)
             usage
             exit
             ;;
     esac
done

# Shift all processed options away
shift $((OPTIND-1))

# Extract environment from the command
if [ "$ENVIRONMENT" == "" ] && [[ "$@" =~ (.*)[\ ]\-?\-e(nv)?(=|[\ ])([a-zA-Z0-9]+)(.*) ]]
then
    COMMAND="${BASH_REMATCH[1]}${BASH_REMATCH[5]}"
    ENVIRONMENT="-e ${BASH_REMATCH[4]}"
else
    COMMAND="$@"
fi

# No tenants specified, pull them from the kernel
if [ "$TENANTS" = "" ]
then
    # Someday this might validate the tenants with something like:
    # comm -12 <(echo "$TENANTS" | tr " ;," "\n") <($BINARY vivait:tenants:list) | xargs -n1 echo

    # Check for `php app/console` vs `app/console`
    if [ -f "$2" ]
    then
        BINARY="$1 $2"
    else
        BINARY="$1"
    fi

    TENANTS=$($BINARY vivait:tenants:list $ENVIRONMENT)

    if [ "$TENANTS" = "" ] && [ "$ENVIRONMENT" != "" ]
    then
        $COMMAND $ENVIRONMENT & wait
        exit $?
    fi
fi

# OS X doesn't support unlimited processes so match the number of tenants
if [ "$PROCESSES" -eq 0 ]
then
    PROCESSES=$(echo "$TENANTS" | wc -w)
fi

if hash parallel 2>/dev/null; then
    # Convert to parallel syntax
    if [ "$VERBOSE" == "-t" ]
    then
        VERBOSE="-v"
    fi

    parallel --gnu -P$PROCESSES --ungroup --halt 2 $VERBOSE $COMMAND --env=tenant_{} --no-debug ::: $TENANTS & wait
else
    >&2 echo "WARNING: No GNU Parallels found, falling back to xargs"
    echo "$TENANTS" | xargs -P$PROCESSES -n1 $VERBOSE -I{} $COMMAND --env=tenant_{} --no-debug & wait
fi
